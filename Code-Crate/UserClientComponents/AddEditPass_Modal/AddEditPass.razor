@using CodeCrateData
@inject UserAccountService _userAccountService
@inject PasswordLogService _passLogService


<div class="container-fluid">
    <div class="row">
        <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8); " aria-modal="true" role="dialog" >
            <div class="modal-dialog">
                <div class="modal-content" style = "width:700px; height:615px;">
                    <div class="modal-header">
                        <h4 class="modal-title">@Title Credentials</h4>
                        <button class="btn btn-dark" @onclick="CancelEvent">Close</button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="@passLog">
                        <DataAnnotationsValidator />

                        <div class="row">
                            <div class="col-md-8" >
                                <div class="form-group">
                                    <label for="Title" class="control-label" style = "line-height:40px;">Application::</label>
                                    <InputText class="form-control" style = "width:670px;border:1px solid;" @bind-Value="passLog.Application" />
                                    <ValidationMessage For="@(()=> passLog.Application)" />
                                    
                                </div>
                                <div class="form-group">
                                    <label for="Title" class="control-label" style = "line-height:40px;">Username:</label>
                                    <InputText class="form-control" style = "width:670px;border:1px solid;" @bind-Value="passLog.Username" />
                                    <ValidationMessage For="@(()=> passLog.Username)" />
                                
                                </div>
                                <div class="form-group">
                                    <label for="Title" class="control-label" style = "line-height:40px;">Password:</label>
                                    <div style="justify-content: center;width: 100%;display: flex">
    
                                        
                                        <InputText type= "@togglePassword" class="form-control" style = "width:450px;border:1px solid;" @bind-Value="passLog.Password" />
                                        <button class='e-icons e-input-eye' style="padding-left: 10px;" @onclick="ShowPassword">test</button> 
                                    </div>
                                    <div>
                                        Select a password length:
                                        <select @bind="@passLength">
                                            <option>8</option>
                                            <option>10</option>
                                            <option>12</option>
                                            <option>14</option>
                                            <option>16</option>
                                        </select>
                                        <button class="btn btn-primary" @onclick="generatePassword">Generate</button>
                                        
                                    </div>
                                    <ValidationMessage For="@(()=> passLog.Password)" />
                                    
                                
                                </div>
                                <div>
                                @if (passLog.Application == "" || passLog.Username == "" || passLog.Password == "") {

                                    <button class="btn btn-primary"  disabled= "true" @onclick="SaveTask">Save</button> 
                                }
                                else {
                                    <button class="btn btn-primary"  disabled="@(!context.Validate())" @onclick="SaveTask">Save</button> 
                                }

                
                                    <button class="btn btn-light" @onclick="CancelEvent">Cancel</button>
                                </div>
                            </div>
                        </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code 
{
    [Parameter] public int passID { get; set; } // This gets the ID from the parent, so this child componenet can use that ID.
    [Parameter] public int userID { get; set; }
    [Parameter] public EventCallback OnComplete { get; set; } // This allows me to communicate with the parent component to refresh the table.
    protected string togglePassword = "password";
    protected int passLength = 8;
    protected PasswordLog passLog = new();
    protected string Title = "Add";

    protected override async Task OnParametersSetAsync()
    {
        if (passID != 0 )
        {
            Title = "Edit";
            passLog = await _passLogService.GetPassLogData(passID);
        }
    }


    protected async Task SaveTask() { 
        
        if (passID != 0) {
            await _passLogService.UpdatePassLog(passLog);
        }
        else {
            await _passLogService.AddUserPassword(passLog, userID);
                
        }
        await CancelEvent();
    }


    protected async Task CancelEvent()
    {   
        await OnComplete.InvokeAsync();
    }

    protected void generatePassword() {
        string newGenPass =  CodeCrateData.PasswordGenerator.GetRandomAlphanumericString(passLength);
        passLog.Password =  newGenPass;
    }

    protected void ShowPassword() {
        if (togglePassword == "password") {
            togglePassword = "text";
        }
        else {
            togglePassword = "password";
        } 
        
    }

}