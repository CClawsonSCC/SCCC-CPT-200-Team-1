@page "/MainDashboard/{userID:int}"
@using CodeCrateData
@inject UserAccountService _userAccountService
@inject PasswordLogService _passLogService
@using Microsoft.AspNetCore.Components.QuickGrid



<div>
    <NavMenu _userAccount = "@userAccount"/>
</div>

<button class="btn btn-primary" @onclick="@(e =>addEditCredentials(0))"> Add</button>
<div>
    <QuickGrid Items="FilteredItems" >
        <PropertyColumn Property="f => f.Application" Title="Application" Sortable="true" />
        <PropertyColumn Property="f => f.Username" Title="Username" Sortable="true" />
        <PropertyColumn Property="f => f.Password" Title="Password" Sortable="true" />

    </QuickGrid>
</div>

@if (displayAddEditComponent){
    <AddEditPass passID="@id" OnComplete="onEditComplete" userID="@userID"/>
}

@code {
    [Parameter] public int userID { get; set; }
    bool displayAddEditComponent = false;
    private int id { get; set; }
    protected UserAccount userAccount = new();
    protected PasswordLog passLog = new();

    IEnumerable<PasswordLog> passLogs = Enumerable.Empty<PasswordLog>(); 

    IQueryable<PasswordLog> FilteredItems
    {
        get
        {
            var result = passLogs.AsQueryable();
            return result!;
        }
    } 


    protected override async Task OnInitializedAsync() {   
       userAccount = await _userAccountService.GetAccountData(userID);
       passLogs = await _passLogService.GetUserPasswords(userID);
    }
    
    private void addEditCredentials(int id) {
        this.id = id;
        displayAddEditComponent = true;
    }

    private async Task onEditComplete() {
        displayAddEditComponent = false;
        passLogs = await _passLogService.GetUserPasswords(userID);
    }

}